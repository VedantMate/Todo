{"ast":null,"code":"import _objectSpread from \"C:/todo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/todo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/todo/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/todo/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/todo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/todo/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/todo/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"C:\\\\todo\\\\src\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nvar TodoList = /*#__PURE__*/function (_Component) {\n  _inherits(TodoList, _Component);\n  var _super = _createSuper(TodoList);\n  function TodoList(props) {\n    var _this;\n    _classCallCheck(this, TodoList);\n    _this = _super.call(this, props);\n    _this.state = {\n      todos: []\n    };\n    _this.create = _this.create.bind(_assertThisInitialized(_this));\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.toggleCompletion = _this.toggleCompletion.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(TodoList, [{\n    key: \"create\",\n    value: function create(newTodo) {\n      this.setState({\n        todos: [].concat(_toConsumableArray(this.state.todos), [newTodo])\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      this.setState({\n        todos: this.state.todos.filter(function (t) {\n          return t.id !== id;\n        })\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, updatedTask) {\n      var updatedTodos = this.state.todos.map(function (todo) {\n        if (todo.id === id) {\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            task: updatedTask\n          });\n        }\n        return todo;\n      });\n      this.setState({\n        todos: updatedTodos\n      });\n    }\n  }, {\n    key: \"toggleCompletion\",\n    value: function toggleCompletion(id) {\n      var updatedTodos = this.state.todos.map(function (todo) {\n        if (todo.id === id) {\n          return _objectSpread(_objectSpread({}, todo), {}, {\n            completed: !todo.completed\n          });\n        }\n        return todo;\n      });\n      this.setState({\n        todos: updatedTodos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var todos = this.state.todos.map(function (todo) {\n        return /*#__PURE__*/React.createElement(CSSTransition, {\n          key: todo.id,\n          timeout: 500,\n          classNames: \"todo\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Todo, {\n          key: todo.id,\n          id: todo.id,\n          task: todo.task,\n          completed: todo.completed,\n          removeTodo: _this2.remove,\n          updateTodo: _this2.update,\n          toggleTodo: _this2.toggleCompletion,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        }));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"TodoList\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, \"Get To Work! \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }\n      }, \"An Animated Todo List Made With React Hooks.\")), /*#__PURE__*/React.createElement(NewTodoForm, {\n        createTodo: this.create,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TransitionGroup, {\n        className: \"todo-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, todos)));\n    }\n  }]);\n  return TodoList;\n}(Component);\nexport default TodoList;","map":{"version":3,"names":["React","Component","NewTodoForm","Todo","CSSTransition","TransitionGroup","TodoList","props","state","todos","create","bind","remove","update","toggleCompletion","newTodo","setState","id","filter","t","updatedTask","updatedTodos","map","todo","task","completed"],"sources":["C:/todo/src/TodoList.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport NewTodoForm from \"./NewTodoForm\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.create = this.create.bind(this);\n    this.remove = this.remove.bind(this);\n    this.update = this.update.bind(this);\n    this.toggleCompletion = this.toggleCompletion.bind(this);\n  }\n  create(newTodo) {\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n  remove(id) {\n    this.setState({\n      todos: this.state.todos.filter(t => t.id !== id)\n    });\n  }\n  update(id, updatedTask) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, task: updatedTask };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  toggleCompletion(id) {\n    const updatedTodos = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    this.setState({ todos: updatedTodos });\n  }\n  render() {\n    const todos = this.state.todos.map(todo => {\n      return (\n        <CSSTransition key={todo.id} timeout={500} classNames='todo'>\n          <Todo\n            key={todo.id}\n            id={todo.id}\n            task={todo.task}\n            completed={todo.completed}\n            removeTodo={this.remove}\n            updateTodo={this.update}\n            toggleTodo={this.toggleCompletion}\n          />\n        </CSSTransition>\n      );\n    });\n    return (\n      <div className='TodoList'>\n        <h1>\n          Get To Work! <span>An Animated Todo List Made With React Hooks.</span>\n        </h1>\n        <NewTodoForm createTodo={this.create} />\n\n        <ul>\n          <TransitionGroup className='todo-list'>{todos}</TransitionGroup>\n        </ul>\n      </div>\n    );\n  }\n}\nexport default TodoList;\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AACvB,SAASC,aAAa,EAAEC,eAAe,QAAQ,wBAAwB;AAAC,IAElEC,QAAQ;EAAA;EAAA;EACZ,kBAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IACX,MAAKC,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IACD,MAAKC,MAAM,GAAG,MAAKA,MAAM,CAACC,IAAI,+BAAM;IACpC,MAAKC,MAAM,GAAG,MAAKA,MAAM,CAACD,IAAI,+BAAM;IACpC,MAAKE,MAAM,GAAG,MAAKA,MAAM,CAACF,IAAI,+BAAM;IACpC,MAAKG,gBAAgB,GAAG,MAAKA,gBAAgB,CAACH,IAAI,+BAAM;IAAC;EAC3D;EAAC;IAAA;IAAA,OACD,gBAAOI,OAAO,EAAE;MACd,IAAI,CAACC,QAAQ,CAAC;QACZP,KAAK,+BAAM,IAAI,CAACD,KAAK,CAACC,KAAK,IAAEM,OAAO;MACtC,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OACD,gBAAOE,EAAE,EAAE;MACT,IAAI,CAACD,QAAQ,CAAC;QACZP,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,CAACS,MAAM,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACF,EAAE,KAAKA,EAAE;QAAA;MACjD,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA,OACD,gBAAOA,EAAE,EAAEG,WAAW,EAAE;MACtB,IAAMC,YAAY,GAAG,IAAI,CAACb,KAAK,CAACC,KAAK,CAACa,GAAG,CAAC,UAAAC,IAAI,EAAI;QAChD,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,EAAE;UAClB,uCAAYM,IAAI;YAAEC,IAAI,EAAEJ;UAAW;QACrC;QACA,OAAOG,IAAI;MACb,CAAC,CAAC;MACF,IAAI,CAACP,QAAQ,CAAC;QAAEP,KAAK,EAAEY;MAAa,CAAC,CAAC;IACxC;EAAC;IAAA;IAAA,OACD,0BAAiBJ,EAAE,EAAE;MACnB,IAAMI,YAAY,GAAG,IAAI,CAACb,KAAK,CAACC,KAAK,CAACa,GAAG,CAAC,UAAAC,IAAI,EAAI;QAChD,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,EAAE;UAClB,uCAAYM,IAAI;YAAEE,SAAS,EAAE,CAACF,IAAI,CAACE;UAAS;QAC9C;QACA,OAAOF,IAAI;MACb,CAAC,CAAC;MACF,IAAI,CAACP,QAAQ,CAAC;QAAEP,KAAK,EAAEY;MAAa,CAAC,CAAC;IACxC;EAAC;IAAA;IAAA,OACD,kBAAS;MAAA;MACP,IAAMZ,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK,CAACa,GAAG,CAAC,UAAAC,IAAI,EAAI;QACzC,oBACE,oBAAC,aAAa;UAAC,GAAG,EAAEA,IAAI,CAACN,EAAG;UAAC,OAAO,EAAE,GAAI;UAAC,UAAU,EAAC,MAAM;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,gBAC1D,oBAAC,IAAI;UACH,GAAG,EAAEM,IAAI,CAACN,EAAG;UACb,EAAE,EAAEM,IAAI,CAACN,EAAG;UACZ,IAAI,EAAEM,IAAI,CAACC,IAAK;UAChB,SAAS,EAAED,IAAI,CAACE,SAAU;UAC1B,UAAU,EAAE,MAAI,CAACb,MAAO;UACxB,UAAU,EAAE,MAAI,CAACC,MAAO;UACxB,UAAU,EAAE,MAAI,CAACC,gBAAiB;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAClC,CACY;MAEpB,CAAC,CAAC;MACF,oBACE;QAAK,SAAS,EAAC,UAAU;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAI,eACW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAM,8CAA4C,CAAO,CACnE,eACL,oBAAC,WAAW;QAAC,UAAU,EAAE,IAAI,CAACJ,MAAO;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,eAExC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,eAAe;QAAC,SAAS,EAAC,WAAW;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAED,KAAK,CAAmB,CAC7D,CACD;IAEV;EAAC;EAAA;AAAA,EAnEoBR,SAAS;AAqEhC,eAAeK,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}